class MouseMeshInteractionHandler{constructor(e,s){this.mesh_name=e,this.handler_function=s}}class MouseMeshInteraction{constructor(e,s){this.scene=e,this.camera=s,this.raycaster=new THREE.Raycaster,this.mouse=new THREE.Vector2,this.updated=!1,this.event="",this.last_mouseenter_mesh=void 0,this.last_pressed_mesh=void 0,this.handlers=new Map,this.handlers.set("click",[]),this.handlers.set("dblclick",[]),this.handlers.set("contextmenu",[]),this.handlers.set("mousedown",[]),this.handlers.set("mouseup",[]),this.handlers.set("mouseenter",[]),this.handlers.set("mouseleave",[]),window.addEventListener("mousemove",this),window.addEventListener("click",this),window.addEventListener("dblclick",this),window.addEventListener("contextmenu",this),window.addEventListener("mousedown",this)}handleEvent(e){"mousemove"===e.type?(this.mouse.x=e.clientX/window.innerWidth*2-1,this.mouse.y=-e.clientY/window.innerHeight*2+1,this.updated=!0,this.event="motion"):(this.updated=!0,this.event=e.type)}addHandler(e,s,t){this.handlers.has(s)&&this.handlers.get(s).push(new MouseMeshInteractionHandler(e,t))}update(){if(this.updated){this.raycaster.setFromCamera(this.mouse,this.camera);const e=this.raycaster.intersectObjects(this.scene.children,!0);if(e.length>0)if("motion"===this.event){let s=this.handlers.get("mouseenter"),t=this.handlers.get("mouseleave");if(t.length>0)for(const s of t)if(void 0!==this.last_mouseenter_mesh&&e[0].object!==this.last_mouseenter_mesh&&s.mesh_name===this.last_mouseenter_mesh.name){s.handler_function(this.last_mouseenter_mesh);break}if(s.length>0)for(const t of s)if(t.mesh_name===e[0].object.name&&e[0].object!==this.last_mouseenter_mesh){this.last_mouseenter_mesh=e[0].object,t.handler_function(e[0].object);break}}else{if("click"===this.event&&this.last_pressed_mesh===e[0].object){for(const s of this.handlers.get("mouseup"))if(s.mesh_name===e[0].object.name){s.handler_function(e[0].object);break}this.last_pressed_mesh=void 0}"mousedown"===this.event&&(this.last_pressed_mesh=e[0].object);let s=this.handlers.get(this.event);for(const t of s)if(t.mesh_name===e[0].object.name){t.handler_function(e[0].object);break}}else if("motion"===this.event)for(const e of this.handlers.get("mouseleave"))if(void 0!==this.last_mouseenter_mesh&&e.mesh_name===this.last_mouseenter_mesh.name){e.handler_function(this.last_mouseenter_mesh),this.last_mouseenter_mesh=void 0;break}this.updated=!1}}}